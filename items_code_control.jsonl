{"doc_id": "code_control", "page_range": [1, 2], "q_no": "C001", "question_text": "1. 다음 C언어로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\n#include <stdio.h>\nmain() {\n❶     int s, el = 0;\n❷     for (int i = 6; i <= 30; i++) {\n❸         s = 0;\n❹         for (int j = 1; j <= i / 2; j++)\n❺             if (i % j == 0)\n❻                 s = s + j;\n❼         if (s == i)\n❽             el++;\n    }\n❾     printf(\"%d\", el);\n}", "choices": [], "answer": {"keys": ["2"], "raw_text": "답 : 2"}, "explanation": "어떤 정수의 약수 중 자신을 제외한 약수를 모두 합하면 자신과 같아지는 수가 있다. 예를 들어 6의 약수 1, 2, 3, 6 중 6을 제외한 1, 2, 3을 더하면 6이 되어 자신과 같아진다. 다음은 6부터 30까지의 정수 중 이러한 약수를 갖는 수를 찾아 출력하는 알고리즘이다.\n\n<pre class=\"code-box\">#include <stdio.h>\nmain( ) {\n❶     int s, el = 0;\n❷     for (int i = 6; i <= 30; i++) {\n❸         s = 0;\n❹         for (int j = 1; j <= i / 2; j++)\n❺             if (i % j == 0)\n❻                 s = s + j;\n❼         if (s == i)\n❽             el++;\n    }\n❾     printf(\"%d\", el);\n}</pre>\n\n<strong>❶</strong> 정수형 변수 s, el을 선언하고, el을 0으로 초기화한다.\n\n<strong>❷</strong> 반복 변수 i가 6부터 1씩 증가하면서 30보다 작거나 같은 동안 ❸~❽번을 반복 수행한다.\n\n<strong>❸</strong> s에 0을 저장한다.\n\n<strong>❹</strong> 반복 변수 j가 1부터 1씩 증가하면서 i/2보다 작거나 같은 동안 ❺, ❻번을 반복 수행한다.\n\n<strong>❺</strong> i를 j로 나눈 나머지가 0이면 ❻번으로 이동하고, 아니면 현재 반복문의 처음인 ❹번으로 이동한다.\n\n<strong>❻</strong> s에 j의 값을 누적시킨다. 구해진 약수를 더하는 과정이다.\n\n<strong>❼</strong> s와 i의 값이 같으면 약수를 모두 더한 값과 자신이 같은 수를 찾은 것이므로, ❽번으로 이동하고, 아니면 현재 반복문의 처음인 ❷번으로 이동한다.\n\n<strong>❽</strong> 'el = el + 1;'과 동일하다. 약수를 모두 더한 값과 자신이 같은 수의 개수를 누적시키는 과정이다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화는 다음과 같다.</strong>\n\n<img src=\"images2/1.png\" alt=\"변수 추적 표\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❾</strong> el의 값 2를 정수로 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 2\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["1."], "page_anchors": [1], "confidence": 1.0, "warnings": []}, "video_url": null}
{"doc_id": "code_control", "page_range": [3, 4], "q_no": "C002", "question_text": "2. 다음 JAVA로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int r = 0;\n        for (int i = 1; i < 999; i++) {\n            if (i % 3 == 0 && i % 2 == 0)\n                r = i;\n        }\n        System.out.print(r);\n    }\n}", "choices": [], "answer": {"keys": ["996"], "raw_text": "답 : 996"}, "explanation": "문제의 코드는 1부터 998까지의 숫자 중 3과 2로 나누었을 때 나머지가 0인, 즉 6의 배수이면서 가장 큰 수를 구하는 알고리즘입니다.\n\n<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int r = 0;\n❷     for (int i = 1; i < 999; i++) {\n❸         if (i % 3 == 0 && i % 2 == 0)\n❹             r = i;\n      }\n❺     System.out.print(r);\n    }\n  }</pre>\n\n<strong>❶</strong> 정수형 변수 r을 선언하고 0으로 초기화한다.\n\n<strong>❷</strong> 반복 변수 i가 1부터 1씩 증가하면서 999보다 작은 동안 ❸, ❹번을 반복 수행한다.\n\n<strong>❸</strong> i를 3과 2로 나눈 나머지가 모두 0이면 ❹번으로 이동하고, 아니면 반복문의 시작인 ❷번으로 이동한다.\n\n<strong>❹</strong> r에 i의 값을 저장한다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화는 다음과 같다.</strong>\n\n<img src=\"images2/2-1.png\" alt=\"변수 추적 표 1\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n<img src=\"images2/2-2.png\" alt=\"변수 추적 표 2\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❺</strong> r의 값을 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 996\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["2."], "page_anchors": [3], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/ztu8KqlOm7I?si=cVoBCINgpgWmSci5"}
{"doc_id": "code_control", "page_range": [5, 6], "q_no": "C003", "question_text": "3. 다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int i = 3, k = 1;\n        switch(i) {\n            case 1: k++;\n            case 2: k -= 3;\n            case 3: k = 0;\n            case 4: k += 3;\n            case 5: k -= 10;\n            default: k--;\n        }\n        System.out.print(k);\n    }\n}", "choices": [], "answer": {"keys": ["-8"], "raw_text": "답 : -8"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int i = 3, k = 1;\n❷     switch(i) {\n        case 1: k++;\n        case 2: k -= 3;\n❸       case 3: k = 0;\n❹       case 4: k += 3;\n❺       case 5: k -= 10;\n❻       default: k--;\n      }\n❼     System.out.print(k);\n    }\n  }</pre>\n\n<strong>❶</strong> 정수형 변수 i, k를 선언하고, 각각 3과 1로 초기화한다.\n\n<strong>❷</strong> i의 값 3에 해당하는 숫자를 찾아간다. 'case 3' 문장으로 이동한다.\n\n<strong>❸</strong> k에 0을 저장한다. → k = 0\n\n<div style=\"margin: 15px 0; padding: 15px; background: #fff3cd; border-left: 4px solid #ffc107;\">\n<strong>※ switch 문을 종료하는 break가 없으므로 ❹, ❺, ❻번을 모두 수행하고 ❼번으로 이동한다.</strong>\n</div>\n\n<strong>❹</strong> 'k = k + 3;'과 동일하다. k의 값에 3을 더한다. → k = 3\n\n<strong>❺</strong> 'k = k - 10;'과 동일하다. k의 값에서 10을 뺀다. → k = -7\n\n<strong>❻</strong> 'k = k - 1;'과 동일하다. k의 값에서 1을 뺀다. → k = -8\n\n<strong>❼</strong> k의 값을 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> -8\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["3."], "page_anchors": [5], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/dq53Tky1uKY?si=HFMmowzy21YbBn2u"}
{"doc_id": "code_control", "page_range": [6, 7], "q_no": "C004", "question_text": "4. 다음은 정수를 역순으로 출력하는 C언어 프로그램이다. 예를 들어 1234의 역순은 4321이다. 단, 1230 처럼 0으로 끝나는 정수는 고려하지 않는다. 프로그램을 분석하여 괄호(①~③)에 들어갈 알맞은 연산자를 쓰시오.\n\n#include <stdio.h>\nint main() {\n    int number = 1234;\n    int div = 10, result = 0;\n    while (number ( ① ) 0) {\n        result = result * div;\n        result = result + number ( ② ) div;\n        number = number ( ③ ) div;\n    }\n    printf(\"%d\", result);\n}", "choices": [], "answer": {"keys": ["!=", ">", "%", "/"], "raw_text": "• ① != 또는 >\n• ② %\n• ③ /"}, "explanation": "<pre class=\"code-box\">#include <stdio.h>\nint main() {\n❶     int number = 1234;\n❷     int div = 10, result = 0;\n❸     while (number != 0) {\n❹         result = result * div;\n❺         result = result + number % div;\n❻         number = number / div;\n      }\n❼     printf(\"%d\", result);\n    }</pre>\n\n<strong>❶</strong> 정수형 변수 number를 선언하고 1234로 초기화한다.\n\n<strong>❷</strong> 정수형 변수 div와 result를 선언하고 각각 10과 0으로 초기화한다.\n\n<strong>❸</strong> number가 몫의 역할을 하므로 0이 될 때까지 ❹~❻번을 반복 수행한다.\n\n<strong>❹</strong> 새로운 나머지를 더하기 전에 기존의 나머지가 저장된 result에 10을 곱한다.\n\n<strong>❺</strong> 새로운 나머지를 result에 더한다.\n\n<strong>❻</strong> 다음 나머지를 구하기 위해 number를 10으로 나눈다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화는 다음과 같다.</strong>\n\n<img src=\"images2/4.png\" alt=\"변수 추적 표\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❼</strong> result의 값 4321을 정수로 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 4321\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["4."], "page_anchors": [6], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/kQu6lhEH0oE?si=4lKwYku3ZOZgyTNw"}
{"doc_id": "code_control", "page_range": [8, 9], "q_no": "C005", "question_text": "5. 다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int w = 3, x = 4, y = 3, z = 5;\n        if((w == 2 | w == y) & !(y > z) & (1 == x ^ y != z)) {\n            w = x + y;\n            if(7 == x ^ y != w)\n                System.out.println(w);\n            else\n                System.out.println(x);\n        } else {\n            w = y + z;\n            if(7 == y ^ z != w)\n                System.out.println(w);\n            else\n                System.out.println(z);\n        }\n    }\n}", "choices": [], "answer": {"keys": ["7"], "raw_text": "답 : 7"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int w = 3, x = 4, y = 3, z = 5;\n❷     if((w == 2 | w == y) & !(y > z) & (1 == x ^ y != z)) {\n❸         w = x + y;\n❹         if(7 == x ^ y != w)\n❺             System.out.println(w);\n          else\n              System.out.println(x);\n      } ❻\n      else {\n          w = y + z;\n          if(7 == y ^ z != w)\n              System.out.println(w);\n          else\n              System.out.println(z);\n      } ❼\n    }\n  }</pre>\n\n<strong>❶</strong> 정수형 변수 w, x, y, z를 선언하고 각각 3, 4, 3, 5로 초기화한다.\n\n<strong>❷</strong> 조건이 참이면 ❸번부터 ❻번 이전까지의 문장을 수행하고, 거짓이면 ❻번 아래 else의 다음 문장부터 ❼번 이전까지의 문장을 수행한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #f8f9fa; border-left: 4px solid #667eea;\">\n<strong>연산자 우선순위에 따라 다음의 순서로 조건의 참/거짓을 확인한다.</strong>\n\n<pre style=\"background: white; padding: 10px; border-radius: 5px; margin: 10px 0;\">• (w == 2 | w == y) & !(y > z) & (1 == x ^ y != z)\n    ①      ②       ③      ④       ⑤    ⑥  ⑦  ⑧  ⑨</pre>\n\n• <strong>①</strong> : w의 값 3과 2는 같지 않으므로 거짓(0)이다.\n• <strong>②</strong> : w의 값 3과 y의 값 3은 같으므로 참(1)이다.\n• <strong>③</strong> : y의 값 3은 z의 값 5보다 크지 않으므로 거짓(0)이지만, 앞에 !(논리 not)가 있으므로 참(1)이다.\n• <strong>④</strong> : 1과 x의 값 4는 같지 않으므로 거짓(0)이다.\n• <strong>⑤</strong> : y의 값 3과 z의 값 5는 같지 않으므로 참(1)이다.\n• <strong>⑥</strong> ① | ② : ①의 결과 0과 ②의 결과 1을 |(비트 or) 연산하면 0001(1) 이므로 결과는 1이다.\n• <strong>⑦</strong> ④ ^ ⑤ : ④의 결과 0과 ⑤의 결과 1을 ^(비트 xor) 연산하면 0001(1) 이므로 결과는 1이다.\n• <strong>⑧</strong> ⑥ & ③ : ⑥의 결과 1과 ③의 결과 1을 &(비트 and) 연산하면 0001(1) 이므로 결과는 1이다.\n• <strong>⑨</strong> ⑧ & ⑦ : ⑧의 결과 1과 ⑦의 결과 1을 &(비트 and) 연산하면 결과는 1이다.\n\n<strong>∴ 최종 결과는 1이며, 1은 조건에서 참을 의미하므로 ❸번으로 이동한다.</strong>\n</div>\n\n<strong>❸</strong> w에 x와 y의 합을 저장한다. (w=7)\n\n<strong>❹</strong> 조건이 참이면 ❺번 문장을, 거짓이면 ❺번 아래 else 다음 문장을 수행한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #f8f9fa; border-left: 4px solid #667eea;\">\n<strong>연산자 우선순위에 따라 다음의 순서로 조건의 참/거짓을 확인한다.</strong>\n\n<pre style=\"background: white; padding: 10px; border-radius: 5px; margin: 10px 0;\">• 7 == x ^ y != w\n    ①     ②   ③</pre>\n\n• <strong>①</strong> : 7과 x의 값 4는 같지 않으므로 결과는 거짓(0)이다.\n• <strong>②</strong> : y의 값 3과 w의 값 7은 같지 않으므로 결과는 참(1)이다.\n• <strong>③</strong> ① ^ ② : ①의 결과 0과 ②의 결과 1을 ^(비트 xor) 연산하면 결과는 1이다.\n\n<strong>∴ 최종 결과는 1이며, 1은 조건에서 참을 의미하므로 ❺번 문장을 수행한다.</strong>\n</div>\n\n<strong>❺</strong> w의 값 7을 출력하고 커서를 다음 줄의 처음으로 옮긴다. 모든 if문이 종료되었으므로 ❼번으로 이동하여 프로그램을 종료한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 7\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["5."], "page_anchors": [8], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/NQqWyA7L6lE?si=0MvJIblq6rq-sbPM"}
{"doc_id": "code_control", "page_range": [10, 11], "q_no": "C006", "question_text": "6. 다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\na = 100\nresult = 0\nfor i in range(1,3):\n    result = a >> i\n    result = result + 1\nprint(result)", "choices": [], "answer": {"keys": ["26"], "raw_text": "답 : 26"}, "explanation": "<pre class=\"code-box\">❶     a = 100\n❷     result = 0\n❸     for i in range(1,3):\n❹         result = a >> i\n❺         result = result + 1\n❻     print(result)</pre>\n\n<strong>❶</strong> 변수 a에 100을 저장한다.\n\n<strong>❷</strong> 변수 result에 0을 저장한다.\n\n<strong>❸</strong> 반복 변수 i가 1에서 시작하여 1씩 증가하면서 3보다 작은 동안 ❹, ❺번을 반복 수행한다.\n\n<strong>❹</strong> >>는 오른쪽 시프트 연산자이므로, a에 저장된 값을 오른쪽으로 i비트 이동시킨 다음 그 값을 result에 저장한다. 정수는 4Byte이므로 100을 4Byte 2진수로 변환하여 계산하면 된다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #fff3cd; border-left: 4px solid #ffc107;\">\n<strong>※ ❸~❺ 반복 과정은 다음과 같다.</strong>\n</div>\n\n<div style=\"margin: 15px 0; padding: 15px; background: #f8f9fa; border-left: 4px solid #667eea;\">\n<strong>반복문 1회 수행(i = 1)</strong>\n\n• <strong>result = a >> i</strong>\n  - a의 값 100을 4Byte 2진수로 표현하면 다음과 같다.\n\n<img src=\"images2/6-1.png\" alt=\"비트 연산 1\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n  - i는 1이므로 부호를 제외한 전체 비트를 오른쪽으로 1비트 이동시킨다. 양수이므로 패딩 비트(빈 자리)에는 0이 채워진다.\n  - 이동된 값을 10진수로 변환하면 50이다. result에는 50이 저장된다.\n  \n• <strong>result = result + 1</strong>\n  - result의 값 50에 1을 더하면 result는 51이 된다.\n</div>\n\n<div style=\"margin: 15px 0; padding: 15px; background: #f8f9fa; border-left: 4px solid #667eea;\">\n<strong>반복문 2회 수행(i = 2)</strong>\n\n• <strong>result = a >> i</strong>\n  - i는 2이므로 a의 값 100을 오른쪽으로 2비트 이동시킨다. 양수이므로 패딩 비트(빈 자리)에는 0이 채워진다.\n\n<img src=\"images2/6-2.png\" alt=\"비트 연산 2\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n  - 이동된 값을 10진수로 변환하면 25다. result에는 25가 저장된다.\n  \n• <strong>result = result + 1</strong>\n  - result의 값 25에 1을 더하면 result는 26이 된다.\n</div>\n\n<strong>❻</strong> result의 값 26을 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 26\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["6."], "page_anchors": [10], "confidence": 1.0, "warnings": []}, "video_url": null}
{"doc_id": "code_control", "page_range": [12, 13], "q_no": "C007", "question_text": "7. 다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int j, i;\n        for (j = 0, i = 0; i <= 5; i++) {\n            j += i;\n            System.out.print(i);\n            if (i == 5) {\n                System.out.print(\"=\");\n                System.out.print(j);\n            } else\n                System.out.print(\"+\");\n        }\n    }\n}", "choices": [], "answer": {"keys": ["0+1+2+3+4+5=15"], "raw_text": "답 : 0+1+2+3+4+5=15"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int j, i;\n❷     for (j = 0, i = 0; i <= 5; i++) {\n❸         j += i;\n❹         System.out.print(i);\n❺         if (i == 5) {\n❻             System.out.print(\"=\");\n❼             System.out.print(j);\n          }\n          else\n❽             System.out.print(\"+\");\n      }\n    }\n  }</pre>\n\n<strong>❶</strong> 정수형 변수 j, i를 선언한다.\n\n<strong>❷</strong> 반복 변수 i가 0부터 1씩 증가하면서 5보다 작거나 같은 동안 ❸~❽번을 반복 수행한다. i가 0으로 초기화될 때 j도 0으로 초기화된다.\n\n<strong>❸</strong> 'j = j + i;'와 동일하다. j에 i의 값을 누적시킨다.\n\n<strong>❹</strong> i의 값을 출력한다.\n\n<strong>❺</strong> i가 5와 같으면 ❻, ❼번을 수행하고, 아니면 ❽번을 수행한다.\n\n<strong>❻</strong> =을 출력한다.\n\n<strong>❼</strong> j의 값을 출력한다.\n\n<strong>❽</strong> +를 출력한다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화:</strong>\n\n<img src=\"images2/7.png\" alt=\"변수 추적 표\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 0+1+2+3+4+5=15\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["7."], "page_anchors": [12], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/9e0XeAZtpGk?si=YwIjW-rZL3oH0vVB"}
{"doc_id": "code_control", "page_range": [14, 15], "q_no": "C008", "question_text": "8. 다음 Python으로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\nlol = [[1, 2, 3], [4, 5], [6, 7, 8, 9]]\nprint(lol[0])\nprint(lol[2][1])\nfor sub in lol:\n    for item in sub:\n        print(item, end=' ')\n    print()", "choices": [], "answer": {"keys": ["[1, 2, 3]\n7\n1 2 3\n4 5\n6 7 8 9"], "raw_text": "[1, 2, 3]\n7\n1 2 3\n4 5\n6 7 8 9"}, "explanation": "<pre class=\"code-box\">lol = [[1, 2, 3], [4, 5], [6, 7, 8, 9]]\nprint(lol[0])\nprint(lol[2][1])\nfor sub in lol:\n    for item in sub:\n        print(item, end=' ')\n    print()</pre>\n\n<strong>[해설]</strong>\n\n<strong>❶</strong> 다음과 같은 행과 열을 갖는 2차원 리스트 lol이 선언되고 다음과 같이 초기화된다.\n\n<img src=\"images2/8-1.png\" alt=\"리스트 lol 구조\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❷</strong> 리스트 lol의 0번째 행을 출력한다. 2차원 리스트에서 각각의 행은 1차원 리스트이므로 0번째 행의 요소들을 리스트 형태로 출력한다. 이어서 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong> [1, 2, 3]\n</div>\n\n<strong>❸</strong> lol[2][1]의 값을 출력한 후 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong><br>\n[1, 2, 3]<br>\n7\n</div>\n\n<strong>❹</strong> 리스트 lol의 행 수만큼 ❺~❼번을 반복 수행한다.\n\n<div style=\"margin-left: 20px;\">\n• <strong>sub</strong> : 리스트 lol의 각 행이 일시적으로 저장될 변수를 선언한다. sub는 1차원 리스트로 선언된다.<br>\n• <strong>lol</strong> : 리스트의 이름을 입력한다. lol 리스트가 3행이므로 각 행을 sub에 저장하면서 ❺~❼번을 3회 수행한다.\n</div>\n\n<strong>❺</strong> 리스트 sub의 요소 수만큼 ❻번을 반복 수행한다.\n\n<div style=\"margin-left: 20px;\">\n• <strong>item</strong> : 리스트 sub의 각 요소가 일시적으로 저장될 변수를 선언한다.<br>\n• <strong>sub</strong> : 리스트의 이름을 입력한다. sub 리스트가 차례로 3개, 2개, 4개의 요소를 가지므로 각 요소를 item에 저장하면서 ❻번을 3회, 2회, 4회 수행한다.\n</div>\n\n<strong>❻</strong> item의 값을 출력하고 공백을 한 칸 띄운다.\n\n<strong>❼</strong> 커서를 다음 줄의 처음으로 옮긴다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 값의 변화:</strong>\n\n<img src=\"images2/8-2.png\" alt=\"변수 추적 표\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>최종 결과</strong><br>\n[1, 2, 3]<br>\n7<br>\n1 2 3<br>\n4 5<br>\n6 7 8 9\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["8."], "page_anchors": [14], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/KxJDXhesfBE?si=Wv9AQzyenU44NRpm"}
{"doc_id": "code_control", "page_range": [16, 17], "q_no": "C009", "question_text": "9. 다음은 변수 n에 저장된 10진수를 2진수로 변환하여 출력하는 Java 프로그램이다. 프로그램을 분석하여 괄호(①, ②)에 들어갈 알맞은 답을 쓰시오.\n\npublic class Test {\n    public static void main(String[]args) {\n        int a[] = new int[8];\n        int i = 0;\n        int n = 10;\n        while( ( ① ) ) {\n            a[i++] = ( ② );\n            n /= 2;\n        }\n        for(i = 7; i >= 0; i--)\n            System.out.print(a[i]);\n    }\n}", "choices": [], "answer": {"keys": ["n > 0", "n % 2"], "raw_text": "• ① n > 0\n• ② n % 2"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String[]args) {\n❶     int a[] = new int[8];\n❷     int i = 0;\n❸     int n = 10;\n❹     while(n > 0) {\n❺         a[i++] = n % 2;\n❻         n /= 2;\n      }\n❼     for(i = 7; i >= 0; i--)\n❽         System.out.print(a[i]);\n    }\n  }</pre>\n\n<strong>❶</strong> 8개의 요소를 갖는 정수형 배열 a를 선언한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #f8f9fa; border-left: 4px solid #667eea;\">\n<table style=\"margin: 10px 0; border-collapse: collapse; width: 100%;\">\n<tr>\n<td style=\"padding: 8px; border: 1px solid #ddd; background: #fff;\">배열 a</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">0</td>\n</tr>\n</table>\n<strong>※ Java는 배열 선언 시 초기화를 하지 않아도 자동으로 0으로 초기화된다.</strong>\n</div>\n\n<strong>❷</strong> 정수형 변수 i를 선언하고 0으로 초기화한다.\n\n<strong>❸</strong> 정수형 변수 n을 선언하고 10으로 초기화한다.\n\n<strong>❹</strong> n이 0보다 큰 동안 ❺~❻번을 반복 수행한다.\n\n<strong>❺</strong> i++은 후치 증가 연산자이므로, a[i]에 n을 2로 나눈 나머지를 저장한 후, i의 값에 1을 더한다.\n\n<strong>❻</strong> 'n = n / 2;'와 동일하다. n을 2로 나눈 값을 n에 저장한다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 값의 변화:</strong>\n\n<img src=\"images2/9-1.png\" alt=\"변수 추적 표 1\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n<img src=\"images2/9-2.png\" alt=\"변수 추적 표 2\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n<img src=\"images2/9-3.png\" alt=\"변수 추적 표 3\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n<img src=\"images2/9-4.png\" alt=\"변수 추적 표 4\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❼</strong> 반복 변수 i가 7부터 1씩 감소하면서 0보다 크거나 같은 동안 ❽번을 반복 수행한다.\n\n<strong>❽</strong> a[i]의 값을 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 00001010\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["9."], "page_anchors": [16], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/wzJj3uWq9TE?si=tUesQw63X3grSRbK"}
{"doc_id": "code_control", "page_range": [18, 19], "q_no": "C010", "question_text": "10. 다음 Java로 구현된 프로그램을 분석하여 괄호(①, ②)에 들어갈 알맞은 답을 쓰시오.\n\npublic class Test {\n    public static void main(String []args) {\n        int ary[][] = new int[( ① )][( ② )];\n        int n = 1;\n        for(int i = 0; i < 3; i++) {\n            for(int j = 0; j < 5; j++) {\n                ary[i][j] = j * 3 + i + 1;\n                System.out.print(ary[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n}", "choices": [], "answer": {"keys": ["3", "5"], "raw_text": "• ① 3\n• ② 5"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String []args) {\n❶     int ary[][] = new int[3][5];\n❷     int n = 1;\n❸     for(int i = 0; i < 3; i++) {\n❹         for(int j = 0; j < 5; j++) {\n❺             ary[i][j] = j * 3 + i + 1;\n❻             System.out.print(ary[i][j] + \" \");\n          }\n❼         System.out.println();\n      }\n    }\n  }</pre>\n\n<strong>❶</strong> 3행 5열의 요소를 갖는 정수형 2차원 배열 ary를 선언한다.\n\n<strong>❷</strong> 정수형 변수 n을 선언하고 1로 초기화한다.\n\n<strong>❸</strong> 반복 변수 i가 0에서 시작하여 1씩 증가하면서 3보다 작은 동안 ❹~❼번을 반복 수행한다.\n\n<strong>❹</strong> 반복 변수 j가 0에서 시작하여 1씩 증가하면서 5보다 작은 동안 ❺~❻번을 반복 수행한다.\n\n<strong>❺</strong> ary[i][j]에 j*3+i+1을 연산한 값을 저장한다.\n\n<strong>❻</strong> ary[i][j]의 값을 출력하고 공백을 한 칸 띄운다.\n\n<strong>❼</strong> 커서를 다음 줄의 처음으로 옮긴다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 값의 변화:</strong>\n\n<img src=\"images2/10.png\" alt=\"변수 추적 표\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과:</strong><br>\n1 4 7 10 13<br>\n2 5 8 11 14<br>\n3 6 9 12 15\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["10."], "page_anchors": [18], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/2YgDZ6z1Ieo?si=9wlyrtavD6kU5COp"}
{"doc_id": "code_control", "page_range": [20, 21], "q_no": "C011", "question_text": "11. 다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int i = 0, c = 0;\n        while (i < 10) {\n            i++;\n            c *= i;\n        }\n        System.out.println(c);\n    }\n}", "choices": [], "answer": {"keys": ["0"], "raw_text": "답 : 0"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int i = 0, c = 0;\n❷     while (i < 10) {\n❸         i++;\n❹         c *= i;\n      }\n❺     System.out.println(c);\n    }\n  }</pre>\n\n<strong>❶</strong> 정수형 변수 i와 c를 선언하고 각각 0으로 초기화한다.\n\n<strong>❷</strong> i가 10보다 작은 동안 ❸, ❹번을 반복 수행한다.\n\n<strong>❸</strong> 'i = i + 1'과 동일하다. i의 값에 1을 누적시킨다.\n\n<strong>❹</strong> 'c = c * i'와 동일하다. c * i의 값을 c에 저장한다.\n\n<strong>❺</strong> c의 값을 화면에 출력하고 커서를 다음 줄 처음으로 옮긴다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화:</strong>\n\n<img src=\"images2/11-1.png\" alt=\"변수 추적 표 1\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n<img src=\"images2/11-2.png\" alt=\"변수 추적 표 2\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 0\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["11."], "page_anchors": [20], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/CoTjv59W97s?si=-Pu7UGGGCMu0K99U"}
{"doc_id": "code_control", "page_range": [22, 23], "q_no": "C012", "question_text": "12. 다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test{\n    public static void main(String[] args){\n        int a = 0, sum = 0;\n        while (a < 10) {\n            a++;\n            if (a%2 == 1)\n                continue;\n            sum +=a;\n        }\n        System.out.println(sum);\n    }\n}", "choices": [], "answer": {"keys": ["30"], "raw_text": "답 : 30"}, "explanation": "<pre class=\"code-box\">    public class Test{\n  public static void main(String[] args){\n❶     int a = 0, sum = 0;\n❷     while (a < 10) {\n❸         a++;\n❹         if (a%2 == 1)\n❺             continue;\n❻         sum +=a;\n      }\n❼     System.out.println(sum);\n    }\n  }</pre>\n\n<strong>❶</strong> 정수형 변수 a와 sum을 선언하고 각각 0으로 초기화한다.\n\n<strong>❷</strong> a가 10보다 작은 동안 ❸~❻번을 반복 수행한다.\n\n<strong>❸</strong> 'a = a + 1;'과 동일하다. a의 값에 1을 누적시킨다.\n\n<strong>❹</strong> a%2, 즉 a를 2로 나눈 나머지가 1이면 ❺번을 수행하고, 아니면 ❻번으로 이동한다.\n\n<strong>❺</strong> while문의 시작점인 ❷번으로 제어를 이동시킨다.\n\n<strong>❻</strong> 'sum = sum + a;'와 동일하다. sum에 a의 값을 누적시킨다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화:</strong>\n\n<img src=\"images2/12-1.png\" alt=\"변수 추적 표 1\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n<img src=\"images2/12-2.png\" alt=\"변수 추적 표 2\" style=\"max-width: 100%; height: auto; margin: 10px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❼</strong> sum의 값을 출력하고 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 30\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["12."], "page_anchors": [22], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/IttKwbcbm8c?si=viHrWPLFLlmYU7df"}
{"doc_id": "code_control", "page_range": [24, 25], "q_no": "C013", "question_text": "13. 다음 JAVA로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int result[] = new int[5];\n        int arr[] = { 77, 32, 10, 99, 50 };\n        for(int i = 0; i < 5; i++) {\n            result[i] = 1;\n            for(int j = 0; j < 5; j++)\n                if(arr[i] < arr[j])\n                    result[i]++;\n        }\n        for(int k = 0; k < 5; k++)\n            System.out.print(result[k]);\n    }\n}", "choices": [], "answer": {"keys": ["24513"], "raw_text": "답 : 24513"}, "explanation": "문제의 코드는 배열 arr에 저장된 값들의 순위를 구하여 배열 result에 저장하는 알고리즘입니다.\n\n<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int result[] = new int[5];\n❷     int arr[] = { 77, 32, 10, 99, 50 };\n❸     for(int i = 0; i < 5; i++) {\n❹         result[i] = 1;\n❺         for(int j = 0; j < 5; j++)\n❻             if(arr[i] < arr[j])\n❼                 result[i]++;\n      }\n❽     for(int k = 0; k < 5; k++)\n❾         System.out.print(result[k]);\n    }\n  }</pre>\n\n<strong>❶</strong> 5개의 요소를 갖는 정수형 배열 result를 선언한다.\n\n<img src=\"images2/13-1.png\" alt=\"배열 result 초기화\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<div style=\"margin: 15px 0; padding: 10px; background: #fff3cd; border-left: 4px solid #ffc107;\">\n<strong>※ Java에서는 배열을 선언하고 초기화하지 않으면 배열의 모든 요소가 0으로 초기화됩니다.</strong>\n</div>\n\n<strong>❷</strong> 5개의 요소를 갖는 정수형 배열 arr을 선언하고 초기화한다.\n\n<img src=\"images2/13-2.png\" alt=\"배열 arr 초기화\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❸</strong> 반복 변수 i가 0부터 1씩 증가하면서 5보다 작은 동안 ❹~❼번을 반복 수행한다.\n\n<strong>❹</strong> 다른 점수들과 비교하기 전까지는 모든 점수의 석차는 1등이므로, result[i]에 1을 저장한다.\n\n<strong>❺</strong> 반복 변수 j가 0부터 1씩 증가하면서 5보다 작은 동안 ❻, ❼번을 반복 수행한다.\n\n<strong>❻</strong> 현재 점수(arr[i])가 비교 점수(arr[j])보다 작으면 석차를 1 증가시키기 위해 ❼번으로 이동하고, 아니면 반복문의 시작인 ❺번으로 이동한다.\n\n<strong>❼</strong> 'result[i] = result[i] + 1;'과 동일하다. i번째 점수의 석차를 1씩 증가시킨다.\n\n<br>\n<strong>반복문 실행에 따른 변수들의 변화:</strong>\n\n<img src=\"images2/13-3.png\" alt=\"변수 추적 표\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<strong>❽</strong> 반복 변수 k가 0부터 1씩 증가하면서 5보다 작은 동안 ❾번을 반복 수행한다.\n\n<strong>❾</strong> result[k]의 값을 출력한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>결과</strong> 24513\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["13."], "page_anchors": [24], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/fbCO0ZCH0Xg?si=kuOpwg9w3sTOJIWM"}
{"doc_id": "code_control", "page_range": [26, 27], "q_no": "C014", "question_text": "14. 다음 Java로 구현된 프로그램을 분석하여 그 실행 결과를 쓰시오. (단, 출력문의 출력 서식을 준수하시오.)\n\npublic class Test {\n    public static void main(String[] args) {\n        int aa[][] = { {45, 50, 75},\n                       {89} };\n        System.out.println(aa[0].length);\n        System.out.println(aa[1].length);\n        System.out.println(aa[0][0]);\n        System.out.println(aa[0][1]);\n        System.out.println(aa[1][0]);\n    }\n}", "choices": [], "answer": {"keys": ["3\n1\n45\n50\n89"], "raw_text": "3\n1\n45\n50\n89"}, "explanation": "<pre class=\"code-box\">    public class Test {\n  public static void main(String[] args) {\n❶     int aa[][] = { {45, 50, 75},\n                      {89} };\n❷     System.out.println(aa[0].length);\n❸     System.out.println(aa[1].length);\n❹     System.out.println(aa[0][0]);\n❺     System.out.println(aa[0][1]);\n❻     System.out.println(aa[1][0]);\n    }\n  }</pre>\n\n<strong>❶</strong> 4개의 요소를 갖는 정수형 2차원 배열 aa를 선언한다.\n\n<div style=\"margin: 15px 0; padding: 15px; background: #f8f9fa; border-left: 4px solid #667eea;\">\n<table style=\"margin: 10px 0; border-collapse: collapse;\">\n<tr>\n<td style=\"padding: 8px; border: 1px solid #ddd; background: #fff;\">aa</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">aa[0][0]</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">aa[0][1]</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">aa[0][2]</td>\n</tr>\n<tr>\n<td style=\"padding: 8px; border: 1px solid #ddd; background: #fff;\"></td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">aa[1][0]</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\"></td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\"></td>\n</tr>\n</table>\n\n다음과 같이 초기화된다.\n\n<table style=\"margin: 10px 0; border-collapse: collapse;\">\n<tr>\n<td style=\"padding: 8px; border: 1px solid #ddd; background: #fff;\">aa</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">45</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">50</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">75</td>\n</tr>\n<tr>\n<td style=\"padding: 8px; border: 1px solid #ddd; background: #fff;\"></td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\">89</td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\"></td>\n<td style=\"padding: 8px; border: 1px solid #ddd; text-align: center;\"></td>\n</tr>\n</table>\n</div>\n\n<strong>❷</strong> aa[0] 배열의 길이 3을 출력하고 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin-left: 20px;\">\n• <strong>length</strong> : length는 배열 클래스의 속성으로, 배열 요소의 개수가 저장되어 있다. aa[0] 배열은 2차원 배열 aa의 첫 번째 행을 가리키는 것이므로, aa[0].length는 첫 번째 행의 요소 수 3을 가지고 있다.\n</div>\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong> 3\n</div>\n\n<strong>❸</strong> aa[1] 배열의 길이 1을 출력하고 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin-left: 20px;\">\n• aa[1] 배열은 2차원 배열 aa의 두 번째 행을 가리키는 것이므로, aa[1].length는 두 번째 행의 요소 수 1을 가지고 있다.\n</div>\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong> 1\n</div>\n\n<strong>❹</strong> aa[0][0]의 값 45를 출력하고 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong> 45\n</div>\n\n<strong>❺</strong> aa[0][1]의 값 50을 출력하고 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong> 50\n</div>\n\n<strong>❻</strong> aa[1][0]의 값 89를 출력하고 커서를 다음 줄의 처음으로 옮긴다.\n\n<div style=\"margin: 10px 0; padding: 10px; background: #e8f5e9; border-left: 3px solid #4caf50;\">\n<strong>결과</strong> 89\n</div>\n\n<br>\n<strong>최종 결과:</strong>\n\n<img src=\"images2/14.png\" alt=\"최종 결과\" style=\"max-width: 100%; height: auto; margin: 15px 0; border: 1px solid #ddd; border-radius: 8px;\">\n\n<div style=\"margin: 15px 0; padding: 15px; background: #e8f5e9; border-left: 4px solid #4caf50;\">\n<strong>최종 결과:</strong><br>\n3<br>\n1<br>\n45<br>\n50<br>\n89\n</div>", "table_refs": [], "image_refs": [], "meta": {"layout": "single", "anchors": ["14."], "page_anchors": [26], "confidence": 1.0, "warnings": []}, "video_url": "https://youtu.be/Yk83ywV-ZEA?si=Eu4nCiDoV1ZVg5Uc"}
